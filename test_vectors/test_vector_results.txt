WBigCalc - test vector results
==============================
I initially used Gnu bc calculator for comparison values, but it turns out to be
problematic with various transcendental functions, so I switched to an online site:
https://www.mathsisfun.com/calculator-precision.html
This source is represented below by 'FPC'

Note: 18446744073709551615 = max_u64  (i.e., the largest 64-bit number)  
This is the base from which other numbers in the test vectors are derived.

- multiply  
scr_cubed.txt, cubed.bc  
X:  6277101735386680762814942322444851025767571854389858533375
bc: 6277101735386680762814942322444851025767571854389858533375

- sqrt  
scr_sqrt.txt, sqrt.bc  
X:  79228162514264337587101499392.000000000087311491369  
bc: 79228162514264337587101499392.00000000008731149137020111084063261090522101180542

- square  
scr_square.txt, square.bc  
;X:  340282366920938463426481119284349108225  
;bc: 340282366920938463426481119284349108225

- y^x
2^64:  18446744073709551616
FPC:   18446744073709551616
bc:    18446744073709551607.46181800646615756984
C++:   18446744073709552000.000000

- Factorial
100!
FPC:    93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000

//  first value is with num_digits=50, second is with num_digits=150
X:      93326215443944152681699238856266700490715968264381621468507000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
        93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000

- Inverse
1/89372978

X:      .000000011189064327698692103557296703260799925453977823140233729259
FPC:   0.0000000111890643276986921035572967032607999254539778231402337292599

=================================
I decided to skip testing of the sin/cos/tan functions and the log functions,
since there rarely is need for very high precision in those calculations.
If anyone sees anomalies in those functions at higher number of digits,
post an issue on the Github page at https://github.com/DerellLicht/WBigCalc,
providing the input value(s) and invalid results, and I will debug and run test vectors.
